{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["// переменные\n\nlet pageUpBtn = document.querySelector('#page-up-btn');\nlet shopNavBtn = document.querySelector('#shop-nav-btn');\nlet dropdownPopup = document.querySelector('#dropdown-popup');\nlet overlay = document.querySelector('#overlay');\nlet dropCloseBtn = document.querySelector('#dropdown-close-btn');\n\nlet mobNavMenu = document.querySelector('#mobile-nav');\nlet mobNavOpenBtn = document.querySelector('#mobile-nav-open-btn');\nlet mobNavCloseBtn = document.querySelector('#mobile-nav-close-btn');\n\n// прокрутка страницы вверх\n\npageUpBtn.addEventListener('click', () => {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n})\n\n// мобильная навигация\n\nmobNavOpenBtn.addEventListener('click', () => {\n  mobNavMenu.classList.add('mobile-nav--active');\n})\n\nmobNavCloseBtn.addEventListener('click', () => {\n  mobNavMenu.classList.remove('mobile-nav--active');\n})\n\n\n// выпадающий список-меню категорий\n\nshopNavBtn.addEventListener('click', () => {\n  dropdownPopup.classList.toggle('show');\n  overlay.classList.toggle('overlay--active');\n})\n\noverlay.addEventListener('click', () => {\n  overlay.classList.remove('overlay--active');\n  dropdownPopup.classList.remove('show');\n})\n\ndropCloseBtn.addEventListener('click', () => {\n  overlay.classList.remove('overlay--active');\n  dropdownPopup.classList.remove('show');\n})\n\n\n// главный слайдер\n\nlet mainSlider = document.querySelector('#main-slider');\nlet mainSlideBtnLeft = document.querySelector('#main-slide-btn-left');\nlet mainSlideBtnRight = document.querySelector('#main-slide-btn-right');\n\n\n'use strict';\n\n(function(){\n\n  var multiItemSlider = (function () {\n\n    function _isElementVisible(element) {\n      var rect = element.getBoundingClientRect(),\n        vWidth = window.innerWidth || doc.documentElement.clientWidth,\n        vHeight = window.innerHeight || doc.documentElement.clientHeight,\n        elemFromPoint = function (x, y) { return document.elementFromPoint(x, y) };\n      if (rect.right < 0 || rect.bottom < 0\n        || rect.left > vWidth || rect.top > vHeight)\n        return false;\n      return (\n        element.contains(elemFromPoint(rect.left, rect.top))\n        || element.contains(elemFromPoint(rect.right, rect.top))\n        || element.contains(elemFromPoint(rect.right, rect.bottom))\n        || element.contains(elemFromPoint(rect.left, rect.bottom))\n      );\n    }\n\n    return function (selector, config) {\n      var\n        _mainElement = document.querySelector('.main-slider'), // основный элемент блока\n        _sliderWrapper = _mainElement.querySelector('.main-slider__wrapper'), // обертка для .slider-item\n        _sliderItems = _mainElement.querySelectorAll('.main-slider__slide'), // элементы (.slider-item)\n        _sliderControls = _mainElement.querySelectorAll('.slider-btn'), // элементы управления\n        _sliderControlLeft = _mainElement.querySelector('.slider-btn--left'), // кнопка \"LEFT\"\n        _sliderControlRight = _mainElement.querySelector('.slider-btn--right'), // кнопка \"RIGHT\"\n        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width), // ширина обёртки\n        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width), // ширина одного элемента\n        _positionLeftItem = 0, // позиция левого активного элемента\n        _transform = 0, // значение транфсофрмации .slider_wrapper\n        _step = _itemWidth / _wrapperWidth * 100, // величина шага (для трансформации)\n        _items = [], // массив элементов\n        _interval = 0,\n        _html = _mainElement.innerHTML,\n        _states = [\n          { active: false, minWidth: 0, count: 1 },\n          { active: false, minWidth: 980, count: 2 }\n        ],\n        _config = {\n          isCycling: false, // автоматическая смена слайдов\n          direction: 'right', // направление смены слайдов\n          interval: 5000, // интервал между автоматической сменой слайдов\n          pause: true // устанавливать ли паузу при поднесении курсора к слайдеру\n        };\n\n      for (var key in config) {\n        if (key in _config) {\n          _config[key] = config[key];\n        }\n      }\n\n      // наполнение массива _items\n      _sliderItems.forEach(function (item, index) {\n        _items.push({ item: item, position: index, transform: 0 });\n      });\n\n      var _setActive = function () {\n        var _index = 0;\n        var width = parseFloat(document.body.clientWidth);\n        _states.forEach(function (item, index, arr) {\n          _states[index].active = false;\n          if (width >= _states[index].minWidth)\n            _index = index;\n        });\n        _states[_index].active = true;\n      }\n\n      var _getActive = function () {\n        var _index;\n        _states.forEach(function (item, index, arr) {\n          if (_states[index].active) {\n            _index = index;\n          }\n        });\n        return _index;\n      }\n\n      var position = {\n        getItemMin: function () {\n          var indexItem = 0;\n          _items.forEach(function (item, index) {\n            if (item.position < _items[indexItem].position) {\n              indexItem = index;\n            }\n          });\n          return indexItem;\n        },\n        getItemMax: function () {\n          var indexItem = 0;\n          _items.forEach(function (item, index) {\n            if (item.position > _items[indexItem].position) {\n              indexItem = index;\n            }\n          });\n          return indexItem;\n        },\n        getMin: function () {\n          return _items[position.getItemMin()].position;\n        },\n        getMax: function () {\n          return _items[position.getItemMax()].position;\n        }\n      }\n\n      var _transformItem = function (direction) {\n        var nextItem;\n        if (!_isElementVisible(_mainElement)) {\n          return;\n        }\n        if (direction === 'right') {\n          _positionLeftItem++;\n          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) > position.getMax()) {\n            nextItem = position.getItemMin();\n            _items[nextItem].position = position.getMax() + 1;\n            _items[nextItem].transform += _items.length * 100;\n            _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\n          }\n          _transform -= _step;\n        }\n        if (direction === 'left') {\n          _positionLeftItem--;\n          if (_positionLeftItem < position.getMin()) {\n            nextItem = position.getItemMax();\n            _items[nextItem].position = position.getMin() - 1;\n            _items[nextItem].transform -= _items.length * 100;\n            _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\n          }\n          _transform += _step;\n        }\n        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';\n      }\n\n      var _cycle = function (direction) {\n        if (!_config.isCycling) {\n          return;\n        }\n        _interval = setInterval(function () {\n          _transformItem(direction);\n        }, _config.interval);\n      }\n\n      // обработчик события click для кнопок \"назад\" и \"вперед\"\n      var _controlClick = function (e) {\n        if (e.target.classList.contains('slider-btn')) {\n          e.preventDefault();\n          var direction = e.target.classList.contains('slider-btn--right') ? 'right' : 'left';\n          _transformItem(direction);\n          clearInterval(_interval);\n          _cycle(_config.direction);\n        }\n      };\n\n      // обработка события изменения видимости страницы\n      var _handleVisibilityChange = function () {\n        if (document.visibilityState === \"hidden\") {\n          clearInterval(_interval);\n        } else {\n          clearInterval(_interval);\n          _cycle(_config.direction);\n        }\n      }\n\n      var _refresh = function () {\n        clearInterval(_interval);\n        _mainElement.innerHTML = _html;\n        _sliderWrapper = _mainElement.querySelector('.main-slider__wrapper');\n        _sliderItems = _mainElement.querySelectorAll('.main-slider__slide');\n        _sliderControls = _mainElement.querySelectorAll('.slider-btn');\n        _sliderControlLeft = _mainElement.querySelector('.slider-btn--left');\n        _sliderControlRight = _mainElement.querySelector('.slider-btn--right');\n        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width);\n        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width);\n        _positionLeftItem = 0;\n        _transform = 0;\n        _step = _itemWidth / _wrapperWidth * 100;\n        _items = [];\n        _sliderItems.forEach(function (item, index) {\n          _items.push({ item: item, position: index, transform: 0 });\n        });\n      }\n\n      var _setUpListeners = function () {\n        _mainElement.addEventListener('click', _controlClick);\n        if (_config.pause && _config.isCycling) {\n          _mainElement.addEventListener('mouseenter', function () {\n            clearInterval(_interval);\n          });\n          _mainElement.addEventListener('mouseleave', function () {\n            clearInterval(_interval);\n            _cycle(_config.direction);\n          });\n        }\n        document.addEventListener('visibilitychange', _handleVisibilityChange, false);\n        window.addEventListener('resize', function () {\n          var\n            _index = 0,\n            width = parseFloat(document.body.clientWidth);\n          _states.forEach(function (item, index, arr) {\n            if (width >= _states[index].minWidth)\n              _index = index;\n          });\n          if (_index !== _getActive()) {\n            _setActive();\n            _refresh();\n          }\n        });\n      }\n\n      // инициализация\n      _setUpListeners();\n      if (document.visibilityState === \"visible\") {\n        _cycle(_config.direction);\n      }\n      _setActive();\n\n      return {\n        right: function () { // метод right\n          _transformItem('right');\n        },\n        left: function () { // метод left\n          _transformItem('left');\n        },\n        stop: function () { // метод stop\n          _config.isCycling = false;\n          clearInterval(_interval);\n        },\n        cycle: function () { // метод cycle\n          _config.isCycling = true;\n          clearInterval(_interval);\n          _cycle();\n        }\n      }\n\n    }\n  }());\n\n  var slider = multiItemSlider('.slider', {\n    isCycling: true\n  })\n\n})();\n\n\n\n\n// слайдер клиентов\n\n(function(){\n\n  var multiItemSlider = (function () {\n    return function (selector, config) {\n      var\n        _mainElement = document.querySelector('.clients-slider'), // основный элемент блока\n        _sliderWrapper = _mainElement.querySelector('.clients-slider__wrapper'), // обертка для .slider-item\n        _sliderItems = _mainElement.querySelectorAll('.clients-slider__slide'), // элементы (.slider-item)\n        _sliderControls = _mainElement.querySelectorAll('.cslider-btn'), // элементы управления\n        _sliderControlLeft = _mainElement.querySelector('.cslider-btn--left'), // кнопка \"LEFT\"\n        _sliderControlRight = _mainElement.querySelector('.cslider-btn--right'), // кнопка \"RIGHT\"\n        _wrapperWidth = parseFloat(getComputedStyle(_sliderWrapper).width), // ширина обёртки\n        _itemWidth = parseFloat(getComputedStyle(_sliderItems[0]).width), // ширина одного элемента\n        _positionLeftItem = 0, // позиция левого активного элемента\n        _transform = 0, // значение транфсофрмации .slider_wrapper\n        _step = _itemWidth / _wrapperWidth * 100, // величина шага (для трансформации)\n        _items = [], // массив элементов\n        _interval = 0,\n        _config = {\n          isCycling: false, // автоматическая смена слайдов\n          direction: 'right', // направление смены слайдов\n          interval: 5000, // интервал между автоматической сменой слайдов\n          pause: true // устанавливать ли паузу при поднесении курсора к слайдеру\n        };\n\n      for (var key in config) {\n        if (key in _config) {\n          _config[key] = config[key];\n        }\n      }\n\n      // наполнение массива _items\n      _sliderItems.forEach(function (item, index) {\n        _items.push({ item: item, position: index, transform: 0 });\n      });\n\n      var position = {\n        getItemMin: function () {\n          var indexItem = 0;\n          _items.forEach(function (item, index) {\n            if (item.position < _items[indexItem].position) {\n              indexItem = index;\n            }\n          });\n          return indexItem;\n        },\n        getItemMax: function () {\n          var indexItem = 0;\n          _items.forEach(function (item, index) {\n            if (item.position > _items[indexItem].position) {\n              indexItem = index;\n            }\n          });\n          return indexItem;\n        },\n        getMin: function () {\n          return _items[position.getItemMin()].position;\n        },\n        getMax: function () {\n          return _items[position.getItemMax()].position;\n        }\n      }\n\n      var _transformItem = function (direction) {\n        var nextItem;\n        if (direction === 'right') {\n          _positionLeftItem++;\n          if ((_positionLeftItem + _wrapperWidth / _itemWidth - 1) > position.getMax()) {\n            nextItem = position.getItemMin();\n            _items[nextItem].position = position.getMax() + 1;\n            _items[nextItem].transform += _items.length * 100;\n            _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\n          }\n          _transform -= _step;\n        }\n        if (direction === 'left') {\n          _positionLeftItem--;\n          if (_positionLeftItem < position.getMin()) {\n            nextItem = position.getItemMax();\n            _items[nextItem].position = position.getMin() - 1;\n            _items[nextItem].transform -= _items.length * 100;\n            _items[nextItem].item.style.transform = 'translateX(' + _items[nextItem].transform + '%)';\n          }\n          _transform += _step;\n        }\n        _sliderWrapper.style.transform = 'translateX(' + _transform + '%)';\n      }\n\n      var _cycle = function (direction) {\n        if (!_config.isCycling) {\n          return;\n        }\n        _interval = setInterval(function () {\n          _transformItem(direction);\n        }, _config.interval);\n      }\n\n      // обработчик события click для кнопок \"назад\" и \"вперед\"\n      var _controlClick = function (e) {\n        if (e.target.classList.contains('cslider-btn')) {\n          e.preventDefault();\n          var direction = e.target.classList.contains('cslider-btn--right') ? 'right' : 'left';\n          _transformItem(direction);\n          clearInterval(_interval);\n          _cycle(_config.direction);\n        }\n      };\n\n      var _setUpListeners = function () {\n        // добавление к кнопкам \"назад\" и \"вперед\" обрботчика _controlClick для событя click\n        _sliderControls.forEach(function (item) {\n          item.addEventListener('click', _controlClick);\n        });\n        if (_config.pause && _config.isCycling) {\n          _mainElement.addEventListener('mouseenter', function () {\n            clearInterval(_interval);\n          });\n          _mainElement.addEventListener('mouseleave', function () {\n            clearInterval(_interval);\n            _cycle(_config.direction);\n          });\n        }\n      }\n\n      // инициализация\n      _setUpListeners();\n      _cycle(_config.direction);\n\n      return {\n        right: function () { // метод right\n          _transformItem('right');\n        },\n        left: function () { // метод left\n          _transformItem('left');\n        },\n        stop: function () { // метод stop\n          _config.isCycling = false;\n          clearInterval(_interval);\n        },\n        cycle: function () { // метод cycle\n          _config.isCycling = true;\n          clearInterval(_interval);\n          _cycle();\n        }\n      }\n\n    }\n  }());\n\n  var slider = multiItemSlider('.slider', {\n    isCycling: true\n  })\n\n\n})();\n"],"file":"main.js"}